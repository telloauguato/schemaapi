const defaults = {
    names: [
        "João",
        "Pedro",
        "Lucas",
        "Mateus",
        "Gabriel",
        "Guilherme",
        "Miguel",
        "Arthur",
        "Rafael",
        "Enzo",
        "Bruno",
        "Leonardo",
        "Daniel",
        "Felipe",
        "Eduardo",
        "Gustavo",
        "Samuel",
        "Nicolas",
        "Luan",
        "Caio",
        "Thiago",
        "Isaac",
        "Diego",
        "Matheus",
        "André",
        "Ricardo",
        "Fernando",
        "Vinícius",
        "Igor",
        "Hugo",
        "Carlos",
        "José",
        "Joaquim",
        "Raul",
        "Augusto",
        "Davi",
        "Ronaldo",
        "Alexandre",
        "Sérgio",
        "Luiz",
        "Antônio",
        "Marcos",
        "Emanuel",
        "Roberto",
        "Jorge",
        "Fábio",
        "Wagner",
        "Renato",
        "Rodrigo",
        "Mário",
        "Paulo",
        "Renan",
        "Luciano",
        "Hélio",
        "Giovanni",
        "Nathan",
        "Cristiano",
        "Marcelo",
        "Douglas",
        "Thales",
        "Alonso",
        "Elias",
        "Erick",
        "Derek",
        "Pablo",
        "Lorenzo",
        "Eduardo",
        "Lucas",
        "Rafael",
        "Adriano",
        "Fernando",
        "Vitor",
        "Henrique",
        "José",
        "Diego",
        "Augusto",
        "Mauro",
        "Juliano",
        "Otávio",
        "Ariel",
        "Renan",
        "Vinícius",
        "Leandro",
        "Ricardo",
        "Leonardo",
        "João Pedro",
        "Paulo César",
        "Silvio",
        "Junior",
        "Sebastião",
        "Igor",
        "Victor",
        "Caio",
        "Thiago",
        "Isaac",
        "Miguel",
        "Emanuel",
        "Raul",
        "Guilherme",
        "Joaquim",
        "Ricardo",
        "Mateus",
        "Elias",
        "Maria",
        "Ana",
        "Joana",
        "Luisa",
        "Camila",
        "Isabel",
        "Rafaela",
        "Juliana",
        "Fernanda",
        "Carolina",
        "Mariana",
        "Gabriela",
        "Beatriz",
        "Patrícia",
        "Amanda",
        "Clara",
        "Eduarda",
        "Vitória",
        "Luiza",
        "Natália",
        "Adriana",
        "Tatiana",
        "Luciana",
        "Laura",
        "Helena",
        "Sophia",
        "Isabella",
        "Valentina",
        "Larissa",
        "Bianca",
        "Manuela",
        "Giovanna",
        "Letícia",
        "Antônia",
        "Silvia",
        "Priscila",
        "Vanessa",
        "Renata",
        "Elisabete",
        "Andréa",
        "Cristina",
        "Márcia",
        "Jéssica",
        "Renata",
        "Talita",
        "Michelle",
        "Rosa",
        "Cláudia",
        "Fátima",
        "Daniela",
        "Elena",
        "Bárbara",
        "Raquel",
        "Marina",
        "Sofia",
        "Marta",
        "Isadora",
        "Débora",
        "Rita",
        "Teresa",
        "Diana",
        "Catarina",
        "Margarida",
        "Helena",
        "Rosa",
        "Sara",
        "Inês",
        "Alice",
        "Madalena",
        "Beatriz",
        "Leonor",
        "Carminho",
        "Constança",
        "Clara",
        "Eva",
        "Lara",
        "Melissa",
        "Yasmin",
        "Emily",
        "Natasha",
        "Olivia",
        "Luna",
        "Aurora",
        "Cecília",
        "Valeria",
        "Sophie",
        "Nina",
        "Emma",
        "Júlia",
        "Isis",
        "Valerie",
        "Mia",
        "Amanda",
        "Lívia",
        "Isabelle",
        "Larissa"
    ],
    surinames: [
        "Silva",
        "Santos",
        "Oliveira",
        "Pereira",
        "Costa",
        "Ferreira",
        "Rodrigues",
        "Almeida",
        "Nascimento",
        "Cavalcanti",
        "Gomes",
        "Ribeiro",
        "Martins",
        "Carvalho",
        "Mendes",
        "Barbosa",
        "Araújo",
        "Fernandes",
        "Dias",
        "Gonçalves",
        "Cardoso",
        "Correia",
        "Freitas",
        "Lima",
        "Azevedo",
        "Figueiredo",
        "Magalhães",
        "Sousa",
        "Dantas",
        "Moura",
        "Cunha",
        "Campos",
        "Castro",
        "Monteiro",
        "Correia",
        "Siqueira",
        "Peixoto",
        "Duarte",
        "Sales",
        "Teixeira",
        "Lopes",
        "Andrade",
        "Melo",
        "Cruz",
        "Pinto",
        "Rocha",
        "Pires",
        "Cavalcante",
        "Bezerra",
        "Mota",
        "Sampaio",
        "Aguiar",
        "Marques",
        "Vasconcelos",
        "Leite",
        "Lobo",
        "Abreu",
        "Abreu",
        "Farias",
        "Diniz",
        "Tavares",
        "Barros",
        "Lira",
        "Pacheco",
        "Cordeiro",
        "Pereira",
        "Domingues",
        "Maciel",
        "Macedo",
        "Pessoa",
        "Rezende",
        "Guimarães",
        "Vargas",
        "Pimentel",
        "Lins",
        "Albuquerque",
        "Câmara",
        "Lacerda",
        "Camargo",
        "Lameira",
        "Nogueira",
        "Machado",
        "Aragão",
        "Fonseca",
        "Henrique",
        "Paiva",
        "Saraiva",
        "Peçanha",
        "Quaresma",
        "Miranda",
        "Viana",
        "Valença",
        "Penna",
        "Coutinho",
        "Vianna",
        "Guedes",
        "Castanho",
        "Cotta"
    ],
    userfix: [
        "Super",
        "Mega",
        "Ultra",
        "Giga",
        "Turbo",
        "Power",
        "Max",
        "Pro",
        "Tech",
        "Ninja",
        "Cool",
        "Smart",
        "Speedy",
        "Quick",
        "Eco",
        "Golden",
        "Silver",
        "Rainbow",
        "Sunny",
        "Lucky",
        "Magic",
        "Fantastic",
        "Epic",
        "Awesome",
        "Sleek",
        "Infinite",
        "Dynamic",
        "Dynamic",
        "Master",
        "Elite",
        "Champion",
        "Hero",
        "Star",
        "Cosmic",
        "Galactic",
        "Digital",
        "Cyber",
        "Pixel",
        "Neon",
        "Neo",
        "Glow",
        "Glowing",
        "Brave",
        "Wild",
        "Free",
        "Serene",
        "Swift",
        "Stealth",
        "Hidden",
        "Vibrant",
        "Savage",
        "Mystic",
        "Flaming",
        "Royal",
        "Elegant",
        "Daring",
        "Fierce",
        "Vivid",
        "Radiant",
        "Blazing",
        "Bionic",
        "Zesty",
        "Harmony",
        "Creative",
        "Dreamy",
        "Enchanted",
        "Eternal",
        "Firefly",
        "Harmonious",
        "Jubilant",
        "Magical",
        "Nebula",
        "Pioneer",
        "Pristine",
        "Resilient",
        "Rhythmic",
        "Solar",
        "Spectral",
        "Starlight",
        "Supreme",
        "Timeless",
        "Tropical",
        "Visionary",
        "Whimsical",
        "Zenith",
        "Zen",
        "Astral",
        "Futuristic",
        "Thunder",
        "Crimson",
        "Golden",
        "Emerald",
        "Sapphire",
        "Ruby",
        "Diamond",
        "Platinum",
        "Pearl",
        "Silver",
        "Bronze",
        "Copper",
        "Titanium",
        "Obsidian",
        "Amethyst",
        "Opal"
    ],
    streets: [
        "Rua Alegria",
        "Avenida Principal",
        "Travessa das Flores",
        "Rua do Sol",
        "Avenida Central",
        "Rua das Árvores",
        "Travessa da Paz",
        "Rua da Liberdade",
        "Avenida das Rosas",
        "Praça da Cidade",
        "Rua dos Sonhos",
        "Avenida dos Ventos",
        "Travessa dos Amigos",
        "Rua das Estrelas",
        "Avenida da Esperança",
        "Largo da Felicidade",
        "Rua das Crianças",
        "Avenida do Amor",
        "Travessa da Harmonia",
        "Rua das Lembranças",
        "Avenida das Águas",
        "Rua da Juventude",
        "Avenida dos Sonhos",
        "Travessa das Paixões",
        "Rua da Saudade",
        "Avenida da Vida",
        "Praça das Flores",
        "Rua das Borboletas",
        "Avenida da Alegria",
        "Travessa do Bem",
        "Rua do Coração",
        "Avenida das Estrelas",
        "Rua das Virtudes",
        "Travessa dos Sonhos",
        "Avenida da Esperança",
        "Rua do Amor",
        "Avenida da Harmonia",
        "Praça dos Anjos",
        "Rua das Ilusões",
        "Avenida das Cores",
        "Travessa da Serenidade",
        "Rua da Tranquilidade",
        "Avenida da Liberdade",
        "Rua das Palavras",
        "Travessa dos Sentimentos",
        "Rua do Silêncio",
        "Avenida da Amizade",
        "Largo da Solidão",
        "Rua das Canções",
        "Avenida das Paixões",
        "Travessa da Esperança",
        "Rua da Imaginação",
        "Avenida dos Amores",
        "Praça das Estrelas",
        "Rua das Promessas",
        "Avenida da Felicidade",
        "Travessa do Tempo",
        "Rua das Histórias",
        "Avenida da Infância",
        "Rua do Sorriso",
        "Travessa dos Desejos",
        "Avenida da Vontade",
        "Rua das Lendas",
        "Avenida dos Encontros",
        "Largo das Maravilhas",
        "Rua das Poesias",
        "Avenida dos Versos",
        "Travessa da Gratidão",
        "Rua das Recordações",
        "Avenida da Sensibilidade",
        "Praça das Maravilhas",
        "Rua do Encanto",
        "Avenida das Surpresas",
        "Travessa da Simpatia",
        "Rua das Melodias",
        "Avenida da Serendipidade",
        "Travessa da Imaginação",
        "Rua das Descobertas",
        "Avenida da Inspiração",
        "Praça das Canções",
        "Rua das Risadas",
        "Avenida dos Sorrisos",
        "Travessa das Aventuras",
        "Rua da Sabedoria",
        "Avenida da Gratidão",
        "Largo da Esperança",
        "Rua da Generosidade",
        "Avenida da Prosperidade",
        "Travessa da Solidariedade",
        "Rua da Ternura",
        "Avenida da Confraternização",
        "Rua da Amizade",
        "Avenida da Compreensão",
        "Praça do Carinho",
        "Rua da Empatia",
        "Avenida da Bondade",
        "Travessa da Paciência",
        "Rua da Empatia",
        "Avenida da Generosidade",
        "Largo da Compaixão"
    ],
    cities: [
        "Cidadela",
        "Vale Verde",
        "Monte Azul",
        "Maré Alta",
        "Ponte Alta",
        "Serra Branca",
        "Aldeia Feliz",
        "Rio Dourado",
        "Estrela do Norte",
        "Vila Aurora",
        "Cidade do Sol",
        "Vale Encantado",
        "Floresta Mágica",
        "Porto Alegre",
        "Montanha Azul",
        "Cidade Harmonia",
        "Primavera",
        "Sol Nascente",
        "Cidade das Rosas",
        "Maré Serena",
        "Aldeia da Paz",
        "Serra do Ouro",
        "Lago Azul",
        "Aurora Boreal",
        "Ponte Dourada",
        "Cidade dos Sonhos",
        "Monte Sereno",
        "Cidade do Amor",
        "Vale da Lua",
        "Floresta Encantada",
        "Rio Verde",
        "Estrela Cadente",
        "Cidade das Estrelas",
        "Vila da Felicidade",
        "Cidade da Esperança",
        "Vale do Arco-Íris",
        "Cidade dos Ventos",
        "Maré Tranquila",
        "Aldeia das Maravilhas",
        "Serra Cristalina",
        "Cidade Brilhante",
        "Monte da Aventura",
        "Sol Poente",
        "Cidade da Imaginação",
        "Primavera Eterna",
        "Aldeia dos Contos",
        "Vale dos Sonhos",
        "Serra do Silêncio",
        "Cidade das Cores",
        "Porto Encantado",
        "Floresta das Fadas",
        "Rio Sereno",
        "Estrela Brilhante",
        "Cidade das Maravilhas",
        "Monte do Mistério",
        "Cidade das Canções",
        "Vale da Inspiração",
        "Cidade dos Sorrisos",
        "Serra do Saber",
        "Cidade da Gratidão",
        "Vale da Amizade",
        "Floresta Serena",
        "Aldeia das Artes",
        "Maré da Prosperidade",
        "Cidade da Compaixão",
        "Monte da Generosidade",
        "Cidade da Esperança",
        "Vale da Compreensão",
        "Cidade da Paciência",
        "Serra da Sabedoria",
        "Cidade da Empatia",
        "Vale da Bondade",
        "Cidade da Solidariedade",
        "Porto da Ternura",
        "Floresta da Compreensão",
        "Rio da Generosidade",
        "Estrela da Compaixão",
        "Cidade da Amizade",
        "Vila da Gratidão",
        "Cidade da Compreensão",
        "Serra da Generosidade",
        "Monte da Solidariedade",
        "Cidade da Ternura",
        "Vale da Confraternização",
        "Cidade da Compaixão",
        "Monte da Prosperidade",
        "Cidade da Generosidade",
        "Vale da Solidariedade",
        "Serra da Ternura",
        "Cidade da Empatia",
        "Vale da Bondade",
        "Cidade da Paciência",
        "Monte da Empatia",
        "Cidade da Generosidade",
        "Porto da Compaixão",
        "Aldeia da Gratidão"
    ],
    states: [
        "Estadônia",
        "Território das Montanhas",
        "Província das Águas",
        "Estado das Flores",
        "Região da Liberdade",
        "Território Verdejante",
        "Província da Harmonia",
        "Estado do Sol Brilhante",
        "Região da Esperança",
        "Estado das Estrelas",
        "Província da Aventura",
        "Território da Imaginação",
        "Estado da Tranquilidade",
        "Região dos Sonhos",
        "Província da Prosperidade",
        "Estado das Maravilhas",
        "Território da Inspiração",
        "Província da Felicidade",
        "Estado da Serenidade",
        "Região da Compreensão",
        "Província da Gratidão",
        "Território da Empatia",
        "Estado da Generosidade",
        "Região da Solidariedade",
        "Província da Ternura",
        "Território da Compaixão",
        "Estado da Amizade",
        "Região da Paz Interior",
        "Província da União",
        "Território da Confraternização",
        "Estado da Tranquilidade",
        "Província da Harmonia",
        "Território da Prosperidade",
        "Estado das Maravilhas",
        "Região da Inspiração",
        "Província da Felicidade",
        "Território da Serenidade",
        "Estado da Compreensão",
        "Região da Gratidão",
        "Província da Empatia",
        "Território da Generosidade",
        "Estado da Solidariedade",
        "Província da Ternura",
        "Território da Compaixão",
        "Estado da Amizade",
        "Região da Paz Interior",
        "Província da União",
        "Território da Confraternização",
        "Estado do Bem-Estar",
        "Província da Saúde",
        "Território da Longevidade",
        "Estado da Harmonia",
        "Região da Vitalidade",
        "Província da Energia",
        "Território do Equilíbrio",
        "Estado da Paz Interior",
        "Província da Felicidade",
        "Território da Serenidade",
        "Estado do Conhecimento",
        "Região da Sabedoria",
        "Província da Inteligência",
        "Território do Aprendizado",
        "Estado da Criatividade",
        "Província da Inovação",
        "Território da Imaginação",
        "Estado da Natureza",
        "Região da Sustentabilidade",
        "Província da Ecologia",
        "Território do Verde",
        "Estado da Liberdade",
        "Província da Justiça",
        "Território dos Direitos",
        "Estado da Igualdade",
        "Região da Fraternidade",
        "Província da Democracia",
        "Território da Participação",
        "Estado da Solidariedade",
        "Província da Cidadania",
        "Território da Responsabilidade",
        "Estado da Amizade",
        "Região da Comunicação",
        "Província da Conexão",
        "Território da União",
        "Estado da Alegria",
        "Província da Diversão",
        "Território da Festa",
        "Estado da Gratidão",
        "Região da Celebração",
        "Província da Felicidade",
        "Território do Sorriso",
        "Estado do Amor",
        "Província da Paixão",
        "Território do Romance",
        "Estado do Progresso",
        "Região do Desenvolvimento",
        "Província da Inovação",
        "Território da Tecnologia",
        "Estado da Educação",
        "Província do Conhecimento",
        "Território da Sabedoria",
        "Estado da Cultura",
        "Região da Arte",
        "Província da Criatividade",
        "Território da Expressão",
        "Estado da Harmonia",
        "Província da Música",
        "Território da Dança",
        "Estado do Esporte",
        "Região da Atividade Física",
        "Província da Competição",
        "Território da Vitória",
        "Estado da Paz",
        "Província da Meditação",
        "Território da Serenidade",
        "Estado da Espiritualidade",
        "Região da Reflexão",
        "Província da Meditação",
        "Território da Conexão",
        "Estado da Generosidade",
        "Província da Solidariedade",
        "Território da Bondade"
    ],
    countries: [
        "Avalonia",
        "Zephyria",
        "Terrânia",
        "Oceânia",
        "Elysium",
        "Arctúria",
        "Sylvânia",
        "Solaria",
        "Verdonia",
        "Aerópia",
        "Pacífica",
        "Luminara",
        "Crystália",
        "Harmonia",
        "Arcádia",
        "Aquaterra",
        "Estelária",
        "Alphaterra",
        "Solânia",
        "Aurópolis",
        "Célestia",
        "Aqualux",
        "Phoenícia",
        "Zionia",
        "Thalassia",
        "Neptúnia",
        "Avalora",
        "Astérios",
        "Pandórum",
        "Olympia",
        "Aerólis",
        "Terracor",
        "Serenos",
        "Maravila",
        "Sylveria",
        "Solária",
        "Zephyros",
        "Verdania",
        "Aerithia",
        "Stellaria",
        "Phenixia",
        "Elysion",
        "Oceânica",
        "Terraluna",
        "Aquaterra",
        "Illumina",
        "Asterion",
        "Venturia",
        "Aurora",
        "Sylvester",
        "Zephirius",
        "Crystallis",
        "Sylvernia",
        "Aquilonia",
        "Estellaris",
        "Lunaris",
        "Aurórea",
        "Atlantis",
        "Aerópolis",
        "Sylvaria",
        "Novaterra",
        "Auroria",
        "Solaris",
        "Luminara",
        "Veridiana",
        "Neptúria",
        "Avalantis",
        "Caelum",
        "Thalassar",
        "Aurópolis",
        "Verdalux",
        "Stellaris",
        "Sylvaterra",
        "Lunaterra",
        "Astropia",
        "Zephyrion",
        "Solácia",
        "Pacifia",
        "Avalânia",
        "Verdelândia",
        "Terraforma",
        "Phenixar",
        "Aquanésia",
        "Olymparia",
        "Aqualuna",
        "Stellarion",
        "Sylvestria",
        "Zephyrus",
        "Avalância",
        "Solarion",
        "Crystallion",
        "Harmonis",
        "Oceânio",
        "Neptúria",
        "Ventúria",
        "Avalópolis",
        "Sylverton",
        "Lunaris",
        "Verdelândia",
        "Aquária",
        "Luminária",
        "Elysior",
        "Terralux",
        "Solária",
        "Sylveris",
        "Aerópolis",
        "Verdantia",
        "Astralis",
        "Aerolândia",
        "Terrafirma",
        "Avalópolis"
    ]
}

export default async (req, res) => {

    const gets = {
        data: async url => {
            return await fetch(url)
                .then(data => data.json())
                .catch((e) => e.json())
        },
        name: ({ suffix = '', prefix = '' }) =>
            `${prefix}${defaults.names[Math.floor(Math.random() * defaults.names.length)]} ${defaults.surinames[Math.floor(Math.random() * defaults.surinames.length)]}${suffix}`,
        value: ({ suffix = '', prefix = '', value = '' }) =>
            `${prefix}${value}${suffix}`,
        int: ({ suffix = '', prefix = '', min = 1, max = 1000 }) => suffix !== '' && prefix !== '' ?
            `${prefix}${Math.floor(Math.random() * (max - min + 1))}${suffix}` : Math.floor(Math.random() * (max - min + 1)),
        username: ({ suffix = '', prefix = '' }) => {
            const username = defaults.userfix[Math.floor(Math.random() * defaults.userfix.length)] + gets.int({ max: 100000, min: 9999 });
            return `${prefix}${username}${suffix}`;
        },
        options: ({ suffix = '', prefix = '', options = [] }) => suffix !== '' && prefix !== '' ? `${prefix}${options[Math.floor(Math.random() * options.length)]}${suffix}` : options[Math.floor(Math.random() * options.length)],
        street: ({ suffix = '', prefix = '' }) => {
            const street = defaults.streets[Math.floor(Math.random() * defaults.streets.length)];
            const number = Math.floor(Math.random() * 10000);
            return `${prefix}${street}, ${number}${suffix}`;
        },
        city: ({ suffix = '', prefix = '' }) =>
            `${prefix}${defaults.cities[Math.floor(Math.random() * defaults.cities.length)]}${suffix}`,
        state: ({ suffix = '', prefix = '' }) =>
            `${prefix}${defaults.states[Math.floor(Math.random() * defaults.states.length)]}${suffix}`,
        country: ({ suffix = '', prefix = '' }) =>
            `${prefix}${defaults.countries[Math.floor(Math.random() * defaults.countries.length)]}${suffix}`,
        email: ({ suffix = '', prefix = '', domain = 'schema.api' }) => {
            const user = defaults.userfix[Math.floor(Math.random() * defaults.userfix.length)];
            const email = `${user}_${Math.floor(Math.random() * 10000)}@${domain}`;
            return `${prefix}${email}${suffix}`;
        },
        pattern: ({ suffix = '', prefix = '', pattern = 'XXX-XXX-XXXX' }) => {
            const result = pattern.replace(/X/g, () => Math.floor(Math.random() * 10));
            return `${prefix}${result}${suffix}`;
        },
        schema: ({ content = [], length = 1 }) => {
            if (length < 0) {
                length = Math.floor(Math.random() * Math.abs(length) + 1)
            }
            return (length === 1)
                ? content.reduce((acc, e) => {
                    const { key, type } = e;
                    return { ...acc, [key]: gets[type](e) };
                }, {})
                : Array.from({ length }, () =>
                    content.reduce((acc, e) => {
                        const { key, type } = e;
                        return { ...acc, [key]: gets[type](e) };
                    }, {})
                )
        },
        external: ({user, repository, schema}) => gets.data(`https://raw.githubusercontent.com/${user}/${repository}/main/${schema}.schema.json`)
    }

    const { router } = req.query;
    const split = router[0].split("@");
    const [user, repo] = split.reverse();

    router.shift()

    const schema = router.join('/')
    const url = `https://raw.githubusercontent.com/${user}/${repo}/main/${schema}.schema.json`

    const data = await gets.data(url)
    var { length = 1, content = [], name = '', description = '' } = data
    if (length < 0) {
        length = Math.floor(Math.random() * Math.abs(length) + 1)
    }
    const result = (length === 1) ?
        await content.reduce((acc, e) => {
            const { key, type } = e;
            return { ...acc, [key]: gets[type](e) };
        }, {}) :
        Array.from({ length }, () =>
            content.reduce((acc, e) => {
                const { key, type } = e;
                return { ...acc, [key]: gets[type](e) };
            }, {})
        )

    res.status(200).json({
        name,
        description,
        user,
        repo,
        file: `${schema}.schema.json`,
        createdAt: new Date().toJSON(),
        length,
        data: result
    });
}
